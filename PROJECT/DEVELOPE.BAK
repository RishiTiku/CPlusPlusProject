#include <fstream.h>
#include <conio.h>
#include <stdio.h>
#include <string.h>
#include <process.h>

//global classes and variables

char * A[3] = {"Where were you Born?\n",
		"What is your Favourite Dish?\n",
		"What Book did you first read?\n"};

class Person
{
	float amount;
	long accountNumber;
	char password[4];
	char * address;
	float rate;
	int priority;
	int securityQuestion;
	char * securityAnswer;
	char * name;
	public:
		int seniorCitizen;
		friend void main();
		friend Person Login();
		Person(long a = 0)
		{
			accountNumber = a;
		}
		float Amount()
		{return amount;}
		int Priority()
		{
			if(amount>=1000000||seniorCitizen==1)
				priority = 1;
			else
				priority = 0;
			return priority;
		}
		float Rate()
		{
			if(Priority()==1)
				rate = 7;
			else
				rate = 6.5;
				return rate;
		}
		char * Address()
		{return address;}
		char * Password()
		{return password;}
		void Withdraw(float sub)
		{
			amount = amount - sub;
		}
		int WithdrawCheck(float sub)
		{
			if(sub>amount)
			{
				cout<<"Not Enough Money in your Account! Try adding some money first!\n";
				return 0;
			}
			else
				return 1;
		}
		void Input()
		{
			char ch;
			cout<<"Enter Amount!\n";
			cin>>amount;
			cout<<"Enter Name!\n";
			gets(name);
			cout<<"Enter Home Address!\n";
			gets(address);
			cout<<"Senior Citizen?(y/n)\n";
			cin>>ch;
			if(ch=='Y'||ch=='y')
				seniorCitizen=1;
			else
				seniorCitizen=0;
			if(Priority()==1||Rate()==7)
				cout<<"Eligible for Priority Service!\n";
		}
		void SecurityQuestion()
		{
			int choice;
			char ch, * answer;
			start:
			cout<<"Choose a Preference.(1-3)\n";
			for(int i = 0;i<=2;i++)
			{
				cout<<i+1<<". ";
				puts(A[i]);
			}
			cin>>choice;
			if(choice>=1&&choice<=3)
			{
				Question:
				securityQuestion = choice-1;
				cout<<"You chose Question "<<choice<<", ";
				puts(A[choice-1]);
				cout<<"Enter an Answer!\n";
				gets(answer);
				cout<<"You entered ";
				puts(answer);
				cout<<"Do you wish to change?(y/n)\n";
				cin>>ch;
				if(ch=='y'||ch=='Y')
					goto Question;
				else
					strcpy(securityAnswer,answer);
			}
			else
			{
				cout<<"Invalid choice entered.Try Again!\n";
				goto start;
			}
		}
		void RecoverPassword()
		{
			char * answer;
			puts(A[securityQuestion]);
			gets(answer);
			if(strcmpi(securityAnswer,answer)==0)
			{
				cout<<"Success!\n";
				cout<<"Account Number:\t"<<accountNumber;
				cout<<"Name:\t";
				puts(name);
				cout<<"\nPassword:\t";
				puts(password);
			}
		}
		void Display()
		{
			cout<<"Account Number:\t"<<accountNumber<<endl;
			cout<<"Name:\t";
			puts(name);
			cout<<"Rate:\t"<<Rate()<<endl;
			if(Priority()==1)
				cout<<"Priority Account!\n";
			else
				cout<<"Regular Account!\n";

		}
		int AccountNumber()
		{return accountNumber;}
};
class ATM
{
	float money;
	public:
		friend void main();
		ATM()
		{
			Update(1);
		}
		void Deposit()
		{
			float add;
			cout<<"Enter Money to be added!\n";
			cin>>add;
			money = money + add;
			Update(2);
		}
		void Withdraw(float sub)
		{
			money = money - sub;
		}
		int WithdrawCheck(float sub)
		{
			if(sub>money)
			{
				cout<<"Not Enough Money in the Machine! Try a different branch.\n";
				return 0;
			}
			else
				return 1;
		}
		int MoneyCheck()
		{
			if(money<=20000)
				return 0;
			else
				return 1;
		}
		void Update(int a)
		{
			if(a==1)
			{
			ifstream fin("Money.txt",ios::in);
			fin>>money;
			fin.close();
			}
			else if(a==2)
			{
			ofstream fout("Money.txt",ios::out);
			fout<<money;
			fout.close();
			}
		}
		float Money()
		{return money;}
}atm;

//Manipulation Methods

void MiniStatement(Person P)
{
	P.Display();
}
void init()
{
	ofstream fout("Number.txt",ios::out|ios::noreplace);
	if(fout)
	{
		fout<<0;
		fout.close();
	}
}//*****************************************************************
int Number()
{
	int  a;
	init();
	ifstream fin("Number.txt",ios::in);
	fin>>a;
	fin.close();
	a++;
	ofstream fout("Number.txt",ios::out);
	fout<<a;
	fout.close();
	return a;

}//*****************************************************************
void  Withdraw(Person P)
{
	float sub;
	cout<<"Enter Money to be Withdrawn!\n";
	cin>>sub;
	if(P.WithdrawCheck(sub))
		if(atm.WithdrawCheck(sub))
		{	cout<<"Here is the Cash!\n";
			atm.Withdraw(sub);
			P.Withdraw(sub);
			atm.Update(2);
			//Update(P);
			return;
		}
}//*****************************************************************
Person Login()
{
	int accn; char p[4];
	Person P, P1(-2);
	ifstream fin("Records.dat",ios::in|ios::binary);
	if(fin)
	{
		cout<<"Welcome to the ATM!\n";
		cout<<"Enter Your Account Number\n";
		cin>>accn;
		if(accn==-1)
		{
			exit(0);
		}
		fin.seekg(0);
		while(!fin.eof())
		{
			fin.read((char*) &P, sizeof(P));
			if(P.accountNumber==accn)
			{
				cout<<"Welcome ";
				puts(P.name);
				cout<<"Enter Password\n";
				cin.getline(p,4);
				if(strcmpi(p,P.Password()))
				{
					cout<<"Success!\n";
					return P;
				}
				else
					cout<<"Incorrect Password.\n";
				//Forgot password
				return P1;
			}
			else
				continue;
		}
		cout<<"Bad Account number!\n";
		return P;
	}
	else
		cout<<"Internal error!\n";
		return P;
}//*****************************************************************
void AddRecords()
{
	ofstream fout("Records.dat",ios::app|ios::binary);
	int a = Number();
	cout<<"Person "<<a<<".\n";
	Person P1(a);
	P1.Input();
	fout.write((char*)&P1,sizeof(P1));
	fout.close();
}//*****************************************************************
void ReadRecords()
{
	ifstream fin("Records.dat",ios::in|ios::binary);
	Person P1(0);
	while(!fin.eof())
	{
		fin.read((char*)&P1,sizeof(P1));
		P1.Display();
	}
	fin.close();
}//*****************************************************************
void main()
{
	int choice = 0, acc=0;
	clrscr();
	char ch = getch();
	if(ch=='&')
		{       do{
			AddRecords();
			cout<<"Do you wish to continue adding records?(y/n)\n";
			cin>>ch;
			}while(ch=='Y'||ch=='y');
			cout<<"Read Records:\n";
			ReadRecords();
			getch();
		}
	else
	{
	welcome:
	Person P = Login();
	if(P.accountNumber==-2)
	{
		cout<<"Bad Account Number!\n";
		goto welcome;
	}
	else
	{
		do
		{
		clrscr();
		User:
		cout<<"Welcome to the ATM. Select from the list of options given below.\n";
		cout<<"1. Withdraw Money.\n";
		cout<<"2. Mini Statement.\n";
		cout<<"3. Change Password.\n";
		cout<<"4. Request Passbook/Chequebook.\n";
		cout<<"5. Exit";
		cout<<"   Enter Your Choice. (1-4)\n";
		cin>>choice;
		}while(!((choice>=1&&choice<=4)||choice==9009));
		switch(choice)
		{
			case 1:	Withdraw(P);
				break;
			case 2:	MiniStatement(P);
				break;
			case 3: //P.ChangePassword();
				break;
			case 4:	break;
			case 5:	goto welcome;
			//case 9009:break;
		}
	}
	getch();
	}
}